import streamlit as st
import openai
import os
import base64

# ========== –ù–ê–°–¢–†–û–ô–ö–ê –°–¢–†–ê–ù–ò–¶–´ ==========
st.set_page_config(page_title="–ö–æ—Ç–∏–∫-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", page_icon="üê±")

# ========== –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –ì–ò–§–û–ö ==========
def load_gif_base64(path):
    full_path = os.path.join(os.path.dirname(__file__), path)
    with open(full_path, "rb") as f:
        return base64.b64encode(f.read()).decode()

cat_left = load_gif_base64("assets/cat_left.gif")
cat_right = load_gif_base64("assets/cat_right.gif")

# ========== –ö–û–¢–ò–ö–ò –°–õ–ï–í–ê –ò –°–ü–†–ê–í–ê ==========
st.markdown(f"""
    <style>
        .cat-left {{
            position: fixed;
            left: 0;
            top: 30%;
            width: 300px;
            z-index: 1000;
        }}
        .cat-right {{
            position: fixed;
            right: 0;
            top: 30%;
            width: 300px;
            z-index: 1000;
        }}
    </style>
    <img src="data:image/gif;base64,{cat_left}" class="cat-left">
    <img src="data:image/gif;base64,{cat_right}" class="cat-right">
""", unsafe_allow_html=True)

# ========== OPENAI API-–ö–õ–Æ–ß ==========
openai.api_key = "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"  # ‚¨ÖÔ∏è –í–°–¢–ê–í–¨ –°–Æ–î–ê –°–í–û–ô OpenAI API –∫–ª—é—á

# ========== –ó–ê–ì–û–õ–û–í–û–ö ==========
st.title("–ü—Ä–∏–≤–µ—Ç, —è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–æ—Ç–∏–∫!")

# ========== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–ê–ú–Ø–¢–ò ==========
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "system", "content": "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–æ—Ç–∏–∫."}]

# ========== –§–û–†–ú–ê –î–õ–Ø –í–í–û–î–ê ==========
with st.form("chat_form", clear_on_submit=True):
    user_input = st.text_input("–¢—ã:", placeholder="–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å...")
    submitted = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

# ========== –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–í–ï–¢–ê ==========
if submitted and user_input:
    st.session_state.messages.append({"role": "user", "content": user_input})

    with st.spinner("–ö–æ—Ç–∏–∫ –¥—É–º–∞–µ—Ç..."):
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=st.session_state.messages
        )
        reply = response.choices[0].message.content
        st.session_state.messages.append({"role": "assistant", "content": reply})

# ========== –í–´–í–û–î –ò–°–¢–û–†–ò–ò ==========
for msg in st.session_state.messages[1:]:
    role = "–¢—ã" if msg["role"] == "user" else "ü§ñ"
    st.markdown(f"**{role}:** {msg['content']}")

# ========== –ö–ù–û–ü–ö–ê –°–ë–†–û–°–ê ==========
if st.button("üßπ –°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥"):
    st.session_state.messages = [{"role": "system", "content": "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–æ—Ç–∏–∫."}]
    st.rerun()

