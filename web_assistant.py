import streamlit as st
from openai import OpenAI
import os
import base64

# ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã =====
st.set_page_config(page_title="–ö–æ—Ç–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", page_icon="üê±")

# ===== –ó–∞–≥—Ä—É–∑–∫–∞ –≥–∏—Ñ–æ–∫ =====
def load_gif_base64(path):
    full_path = os.path.join(os.path.dirname(__file__), path)
    with open(full_path, "rb") as f:
        return base64.b64encode(f.read()).decode()

cat_left = load_gif_base64("assets/cat_left.gif")
cat_right = load_gif_base64("assets/cat_right.gif")

# ===== CSS –¥–ª—è –∫–æ—Ç–∏–∫–æ–≤ =====
st.markdown(f"""
    <style>
        .cat-left {{
            position: fixed;
            left: 0;
            top: 25%;
            width: 240px;
            z-index: 1000;
        }}
        .cat-right {{
            position: fixed;
            right: 0;
            top: 25%;
            width: 240px;
            z-index: 1000;
        }}
    </style>
    <img src="data:image/gif;base64,{cat_left}" class="cat-left">
    <img src="data:image/gif;base64,{cat_right}" class="cat-right">
""", unsafe_allow_html=True)

# ===== API-–∫–ª—é—á –∏–∑ —Å–µ–∫—Ä–µ—Ç–∞ =====
client = OpenAI(api_key=st.secrets["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"])

# ===== –ó–∞–≥–æ–ª–æ–≤–æ–∫ =====
st.title("–ü—Ä–∏–≤–µ—Ç, —è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–æ—Ç–∏–∫!")

# ===== –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ =====
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "system", "content": "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–æ—Ç–∏–∫."}
    ]

# ===== –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ =====
with st.form("chat_form", clear_on_submit=True):
    user_input = st.text_input("–¢—ã:", placeholder="–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å...")
    submitted = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")

# ===== –ó–∞–ø—Ä–æ—Å –∫ OpenAI =====
if submitted and user_input:
    st.session_state.messages.append({"role": "user", "content": user_input})

    with st.spinner("–ö–æ—Ç–∏–∫ –¥—É–º–∞–µ—Ç..."):
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=st.session_state.messages
        )
        reply = response.choices[0].message.content
        st.session_state.messages.append({"role": "assistant", "content": reply})

# ===== –í—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ =====
for msg in st.session_state.messages[1:]:
    role = "–¢—ã" if msg["role"] == "user" else "ü§ñ"
    st.markdown(f"**{role}:** {msg['content']}")

# ===== –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ =====
if st.button("üßπ –°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥"):
    st.session_state.messages = [
        {"role": "system", "content": "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–æ—Ç–∏–∫."}
    ]
    st.rerun()
